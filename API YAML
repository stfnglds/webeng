swagger: '2.0'
info:
  version: 1.0.0
  title: Adressbooks
host: petstore.swagger.io
tags:
  - name: Entries
    description: Entries of books
  - name: Books
    description: Everything about Books
  - name: Groups
    description: Groups for entries of books
 
schemes:
  - https
  - http
paths:
  /entries:
    get:
      tags:
        - Entries
      summary: Get all entries
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Entries'
        '400':
          description: Invalid status value
      
    post:
      tags:
        - Entries
      summary: Add a new entrie to a book/group
      description: ''
      operationId: addEntrie
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/Entries'
      responses:
        '405':
          description: Invalid input
  /entries/{id}: 
    put:
      tags:
        - Entries
      summary: Update an existing entrie
      description: ''
      operationId: updateEntrie
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: id  
          required: true
          type: integer
        - in: body
          name: body
          schema:
            $ref: '#/definitions/Entries'
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Entrie not found
        '405':
          description: Validation exception
    delete:
      tags:
        - Entries
      summary: Deletes a entrie
      description: ''
      operationId: deleteEntries
      produces:
        - application/json
      parameters:
          - in: path
            name: id  
            required: true
            type: integer
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  /entries/{group}:
    get:
      tags:
        - Entries
      summary: Finds entries by group
      description: Multiple groups can be provided with comma separated strings
      operationId: findEnriesByGroups
      produces:
        - application/json
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: true
          type: array
          items:
            type: string
            enum:
              - available
              - pending
              - sold
            default: available
          collectionFormat: multi
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pet'
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - 'write:pets'
            - 'read:pets'
  /books:
    get:
      tags:
        - Books
      summary: Get all books
      description: Returns a single pet
      operationId: getPetById
      produces:
        - application/xml
        - application/json
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Pet'
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
    
  /group:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      produces:
        - application/xml
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        default:
          description: successful operation
 
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
securityDefinitions:
  petstore_auth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
    flow: implicit
    scopes:
      'write:pets': modify pets in your account
      'read:pets': read your pets
  api_key:
    type: apiKey
    name: api_key
    in: header
    
    
    
    
definitions:
  Books:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Books
  Groups:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
    xml:
      name: Groups
  Entries:
    type: object
    properties:
      id:
        type: integer
        format: int64
      groups:
        $ref: '#/definitions/Groups'
      name:
        type: string
      email:
        type: string
      address:
        type: string
      rating:
            type: integer
            minimum: 1
            maximum: 10
    xml:
      name: Entries
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string'
